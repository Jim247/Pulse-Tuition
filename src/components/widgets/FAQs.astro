---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';

const {
  title = '',
  subtitle = '',
  tagline = '',
  items = [],
  id,
  isDark = false,
  classes = {},
} = Astro.props;
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`}

>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />
  <div class="space-y-4">
    {items.map((item: { title: string; description: string }, index: number) => (
      <div
        class="faq-item border rounded-md overflow-hidden"
        data-key={index}
      >
        <!-- Title -->
        <button
          class="faq-button w-full text-left px-4 py-3 bg-white font-semibold font-logo flex justify-between items-center"
          data-index={index}
        >
          <span>{item.title}</span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="faq-icon h-5 w-5 transition-transform duration-200"
            viewBox="0 0 24 24"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M19 9l-7 7-7-7"
            />
          </svg>
        </button>
        <!-- Collapsible Description -->
        <div
          class="faq-description px-4 py-2 text-gray-700 bg-white overflow-hidden transition-all duration-300 ease-in-out"
          style="max-height: 0; opacity: 0; padding: 0;"
        >
          {item.description}
        </div>
      </div>
    ))}
  </div>
</WidgetWrapper>

<script>
  function accordionSetup() {
    const faqItems = document.querySelectorAll('.faq-item');
    
    faqItems.forEach((item) => {
      const button = item.querySelector('.faq-button');
      const icon = item.querySelector('.faq-icon');
      const content = item.querySelector('.faq-description');

      if (button && content && icon) {
        const contentEl = content as HTMLElement;
        button.addEventListener('click', () => {
          const isOpen = item.classList.contains('active');

          if (!isOpen) {
            // Opening
            item.classList.add('active');
            button.setAttribute('aria-expanded', 'true');
            contentEl.style.maxHeight = contentEl.scrollHeight + 48 + 'px';
            contentEl.style.opacity = '1';
            contentEl.style.padding = '1rem';
            icon.classList.add('rotate-180');
          } else {
            // Closing
            item.classList.remove('active');
            button.setAttribute('aria-expanded', 'false');
            contentEl.style.maxHeight = '0';
            contentEl.style.opacity = '0';
            contentEl.style.padding = '0';
            icon.classList.remove('rotate-180');
          }
        });
      }
    });
  }

  // Initial setup
  accordionSetup();
  
  // Re-run on navigation
  document.addEventListener('astro:after-swap', accordionSetup);
</script>