---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';

import { getHomePermalink } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
  submenu?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [
    {
      text: 'BOOK NOW',
      href: '/contact', // Update this to the contact page
      variant: 'primary',
    },
  ],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  position = 'center',
} = Astro.props;
---

<header
  class:list={[
    {
      sticky: isSticky,
      relative: !isSticky,
      dark: isDark,
    },
    'top-0 z-40 flex-none mx-auto w-full border-b-4 border-gray-50/0 transition-opacity ease-in-out',
  ]}
  {...(isSticky && { 'data-aw-sticky-header': true })}
  {...(id && { id })}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative text-black py-3 px-3 md:px-6 mx-auto w-full text-center',
      position !== 'center'
        ? 'md:flex md:justify-between'
        : 'md:grid md:grid-cols-[auto,1fr,auto] md:items-center',

      !isFullWidth && 'max-w-7xl',
    ]}
  >
    <!-- Logo and Mobile Toggle -->
    <div
      class:list={[
        position === 'right' ? 'mr-auto rtl:mr-0 rtl:ml-auto' : '',
        'flex justify-between',
      ]}
    >
      <a class="flex items-center text-black text-sm" href={getHomePermalink()}>
        <Logo class="w-8 h-8" />
      </a>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>

    <!-- Navigation Links -->
    <nav
      class="items-center w-full md:w-auto hidden md:flex md:mx-5 text-default text-black md:justify-self-center"
      aria-label="Main navigation"
    >
      <ul class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-base tracking-wide font-medium md:justify-center">
        {links.map(({ text, href, submenu }) => (
          <>
            <li class="group relative">
              {submenu?.length ? (
                <>
                  <!-- Parent Menu Button for Desktop -->
                  <button
                    type="button"
                    class="hover:text-link py-4 items-center whitespace-wrap uppercase focus:outline-none hidden md:flex"
                    aria-haspopup="true"
                    aria-expanded="false"
                    style="margin-right: 23px;" 
                  >
                    {text}
                    <Icon
                      name="tabler:chevron-down"
                      class="w-4 h-4 ml-1 hidden md:inline text-black"
                    />
                  </button>

                    <!-- Submenu for Desktop -->
                    <ul
                    class="absolute left-0 top-full mt-1 w-48 bg-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50"
                    >
                    {submenu.map(({ text: submenuText, href: submenuHref }) => (
                      <li>
                      <a
                        class="py-3 px-6 block justify-start whitespace-nowrap uppercase hover:text-link hover:bg-gray-100 focus:outline-none"
                        href={submenuHref}
                      >
                        {submenuText}
                      </a>
                      </li>
                    ))}
                    </ul>
                </>
              ) : (
                <a
                  class="hover:text-link  hover:text-sky-800 px-6 py-4 flex items-center whitespace-nowrap uppercase"
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>

            {/* Submenu items as main menu items for mobile */}
            {submenu?.length &&
              submenu.map(({ text: submenuText, href: submenuHref }) => (
                <li class="md:hidden text-right">
                  <a
                    class="hover:text-link hover:text-sky-800 px-6 py-4 flex items-center whitespace-nowrap uppercase text"
                    href={submenuHref}
                  >
                    {submenuText}
                  </a>
                </li>
              ))}
          </>
        ))}
      </ul>
    </nav>

    <!-- Action Buttons -->
    <div
      class:list={[
        position === 'left' ? 'ml-auto rtl:ml-0 rtl:mr-auto' : '',
        'hidden md:self-center md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0 md:justify-self-end',
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        {actions?.length && (
          <span class="ml-2 text-lg md:text-xl lg:text-2xl">
            {actions.map((btnProps) => (
              <Button
                {...btnProps}
                class="ml-2 py-2.5 px-5.5 md:px-6 font-semibold shadow-none hover:bg-sky-600 text-sm w-auto text-white"
              />
            ))}
          </span>
        )}
      </div>
    </div>
  </div>
</header>