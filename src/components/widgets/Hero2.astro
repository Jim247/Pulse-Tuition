---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';

import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),
  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section
  class="relative md:-mt-[76px] not-prose overflow-visible min-h-[700px]"
  {...(id ? { id } : {})}
>
  <!-- Background Slot -->
  <div class="absolute inset-0 pointer-events-none z-[-1]" aria-hidden="true">
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
  </div>

  <!-- Content Wrapper -->
  <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 pb-12 md:pb-20">
    <div class="flex flex-col items-center text-center">
      {tagline && (
        <p class="text-lg text-primary-500 font-bold uppercase tracking-widest mb-6 intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade">
          {tagline}
        </p>
      )}

      {title && (
        <h2 class="font-bold text-3xl sm:text-4xl md:text-5xl mb-4 intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade">
          <Fragment set:html={title} />
        </h2>
      )}

      {subtitle && (
        <p
          class="text-xl text-muted mb-6 intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
          set:html={subtitle}
        />
      )}

      {actions && (
        <div class="max-w-xs sm:max-w-md mx-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade">
          {Array.isArray(actions) ? (
            actions.map((action) => (
              <div class="flex w-full sm:w-auto">
                <Button {...(action || {})} class="w-full sm:mb-0" />
              </div>
            ))
          ) : (
            <Fragment set:html={actions} />
          )}
        </div>
      )}
    </div>

    {content && <Fragment set:html={content} />}
  </div>

  <!-- Portrait Image Behind -->
  <div
    class="absolute inset-0 pointer-events-none z-[-1]"
    aria-hidden="true"
  >
    {image && (
      <Image
        class="w-full h-full object-cover"
        loading="eager"
        width={400}
        height={600}
        aspectRatio={4/3}
        {...image}
      />
    )}
  </div>
</section>